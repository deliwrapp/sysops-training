services:
    llm:
        image: ollama/ollama:latest
        profiles: ['linux']
        networks:
            - net
        # deploy:
        #     resources:
        #         reservations:
        #             devices:
        #                 - driver: nvidia
        #                   count: all
        #                   capabilities: [gpu]

    pull-model:
        build:
            dockerfile: pull_model.Dockerfile
        environment:
            - OLLAMA_BASE_URL=${OLLAMA_BASE_URL-http://host.docker.internal:11434}
            - LLM=${LLM-codellama:7b-instruct}
        networks:
            - net
        depends_on:
            - llm

    database:
        image: neo4j:5.11
        ports:
            - 7687:7687
            - 7474:7474
        volumes:
            - ./data:/data
        environment:
            - NEO4J_AUTH=${NEO4J_USERNAME-neo4j}/${NEO4J_PASSWORD-password}
            - NEO4J_PLUGINS=["apoc"]
            - NEO4J_db_tx__log_rotation_retention__policy=false
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'wget --no-verbose --tries=1 --spider localhost:7474 || exit 1'
                ]
            interval: 5s
            timeout: 3s
            retries: 5
        networks:
            - net

    bot:
        build:
            dockerfile: bot.Dockerfile
        volumes:
            - ./embedding_model:/embedding_model
            - type: bind
              source: /home/${whoami}
              target: /home/${whoami}
        environment:
            - NEO4J_URI=${NEO4J_URI-neo4j://database:7687}
            - NEO4J_PASSWORD=${NEO4J_PASSWORD-password}
            - NEO4J_USERNAME=${NEO4J_USERNAME-neo4j}
            - OPENAI_API_KEY=${OPENAI_API_KEY-}
            - OLLAMA_BASE_URL=${OLLAMA_BASE_URL-http://host.docker.internal:11434}
            - LLM=${LLM-codellama:7b-instruct}
            - EMBEDDING_MODEL=${EMBEDDING_MODEL-ollama}
            - LANGCHAIN_ENDPOINT=${LANGCHAIN_ENDPOINT-"https://api.smith.langchain.com"}
            - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2-false}
            - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT}
            - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
        networks:
            - net
        depends_on:
            database:
                condition: service_healthy
            pull-model:
                condition: service_completed_successfully
        develop:
            watch:
                - action: rebuild
                  path: .
        ports:
            - 8501:8501

networks:
    net:
