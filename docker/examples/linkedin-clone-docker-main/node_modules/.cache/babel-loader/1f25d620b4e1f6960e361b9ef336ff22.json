{"ast":null,"code":"var _jsxFileName = \"/Users/ajeetraina/nov/linkedin-clone-docker/src/components/Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../css/Feed.css';\nimport Post from '../components/Post';\nimport InputOption from '../components/InputOption';\nimport CreateIcon from '@material-ui/icons/Create';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport axios from 'axios';\nimport FlipMove from 'react-flip-move'; // docker run -p 27017:27017 -v /Users/ellarnol/linkedInDB:/data/db  mongo:latest\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed({\n  user\n}) {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [input, setInput] = useState([]);\n  const [newData, setNewData] = useState(false);\n  useEffect(() => {\n    const url = process.env.REACT_APP_GET_POSTS; // const url = \"http://localhost:9000/v1/linkedIn/posts\"\n\n    axios.get(url).then(data => {\n      console.log(data);\n      setPosts(data.data);\n    });\n    setNewData(false);\n  }, [newData]);\n\n  const sendPost = e => {\n    e.preventDefault();\n    const isoDateString = new Date().toISOString(); // const url = \"http://localhost:9000/v1/linkedIn/addPost\"\n\n    const url = process.env.REACT_APP_ADD_POST;\n    const data = {\n      message: input,\n      description: user.email,\n      username: user.username,\n      userImage: user.userImage,\n      timeStamp: isoDateString\n    };\n    axios.post(url, data).then(data => {\n      setNewData(true);\n      setInput('');\n      console.log(data);\n    });\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setInput(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed__inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__input\",\n        children: [/*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            value: input,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendPost,\n            type: \"submit\",\n            children: \"SEND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__inputOptions\",\n        children: [/*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: ImageIcon,\n          color: \"#70B5f9\",\n          title: \"Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: SubscriptionsIcon,\n          color: \"#E7A33E\",\n          title: \"Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: EventNoteIcon,\n          color: \"gray\",\n          title: \"Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: CalendarViewDayIcon,\n          color: \"#7FC15E\",\n          title: \"Write Article\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(FlipMove, {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        image: post.userImage,\n        name: post.username,\n        description: post.email,\n        message: post.message,\n        user: user\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }, this)).reverse()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Feed, \"FslJOO+lplBypIE9dvEKOEXM8u0=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/ajeetraina/nov/linkedin-clone-docker/src/components/Feed.js"],"names":["React","useState","useEffect","Post","InputOption","CreateIcon","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","axios","FlipMove","Feed","user","posts","setPosts","input","setInput","newData","setNewData","url","process","env","REACT_APP_GET_POSTS","get","then","data","console","log","sendPost","e","preventDefault","isoDateString","Date","toISOString","REACT_APP_ADD_POST","message","description","email","username","userImage","timeStamp","post","handleChange","target","value","map","_id","reverse"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport '../css/Feed.css'\nimport Post from '../components/Post'\nimport InputOption from '../components/InputOption'\nimport CreateIcon from '@material-ui/icons/Create';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport axios from 'axios'\nimport FlipMove from 'react-flip-move';\n// docker run -p 27017:27017 -v /Users/ellarnol/linkedInDB:/data/db  mongo:latest\n\n\nexport default function Feed({user}) {\n    const [posts, setPosts] = useState([])\n    const [input, setInput] = useState([])\n    const [newData, setNewData] = useState(false)\n        \n    useEffect(() => {\n        const url = process.env.REACT_APP_GET_POSTS\n        // const url = \"http://localhost:9000/v1/linkedIn/posts\"\n        axios.get(url).then(data => {console.log(data); setPosts(data.data)})\n        setNewData(false)\n    }, [newData] )\n\n\n    const sendPost = (e) => {\n        e.preventDefault();\n        const isoDateString = new Date().toISOString();\n        // const url = \"http://localhost:9000/v1/linkedIn/addPost\"\n        const url = process.env.REACT_APP_ADD_POST\n        const data = {\n            message: input,\n            description: user.email,\n            username: user.username,\n            userImage: user.userImage,\n            timeStamp: isoDateString\n\n        }\n     \n        axios.post(url,data).then(data => {setNewData(true) ;\n          \n        setInput('');\n        \n        console.log(data)})       \n      \n\n    }\n\n   const handleChange = (e) => {\n       e.preventDefault()\n       setInput(e.target.value)\n       \n   }\n\n    return (\n        <div className=\"feed\">\n          <div className=\"feed__inputContainer\">\n            <div className=\"feed__input\" >\n                        <CreateIcon />\n                        <form>\n                            <input onChange={handleChange} value={input} type=\"text\"/>\n                            <button \n                            onClick={sendPost}\n                            type=\"submit\">SEND</button>\n\n\n                        </form>\n                </div>\n                <div className=\"feed__inputOptions\">\n               \n               <InputOption Icon={ImageIcon} color={\"#70B5f9\"} title=\"Photo\" />\n   \n               <InputOption Icon={SubscriptionsIcon} color={\"#E7A33E\"} title=\"Video\" />\n\n               <InputOption Icon={EventNoteIcon} color={\"gray\"} title=\"Event\" />\n\n               <InputOption Icon={CalendarViewDayIcon} color={\"#7FC15E\"} title=\"Write Article\" />\n                \n                \n               </div>\n            </div>\n           <FlipMove>\n           {posts.map((post) => \n             <Post \n                key={post._id}\n                image={post.userImage}\n                name={post.username}\n                description={post.email}\n                message={post.message} \n                user={user}\n                />).reverse()}\n\n           </FlipMove>\n           \n                \n\n          \n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}