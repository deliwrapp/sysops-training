# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
apiVersion: "app.redislabs.com/v1"
kind: "RedisEnterpriseCluster"
metadata:
  name: gke-rec-target
spec:
  nodes: 3
  redisEnterpriseNodeResources:
    limits:
      cpu: "2"
      memory: 4Gi
    requests:
      cpu: "1"
      memory: 4Gi
  podTolerations:
  - key: app.stateful/component
    operator: Equal     
    value: redis-operator
    effect: NoSchedule
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 1
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: "app.stateful/component"
            operator: In
            values:
            - "rec"
        topologyKey: "topology.kubernetes.io/zone"
  redisEnterpriseVolumeMounts:
  - name: nsswitch
    mountPath: /etc/nsswitch.conf
    subPath: nsswitch.conf
  volumes:
  - name: nsswitch
    configMap:
      name: nsswitch
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nsswitch
data:
  nsswitch.conf: |
    # /etc/nsswitch.conf
    #
    # Example configuration of GNU Name Service Switch functionality.
    # If you have the `glibc-doc-reference' and `info' packages installed, try:
    # `info libc "Name Service Switch"' for information about this file.
    
    passwd:         compat
    group:          compat
    shadow:         compat
    gshadow:        files
    
    hosts:          files dns mdns4_minimal [NOTFOUND=return]
    networks:       files
    
    protocols:      db files
    services:       db files
    ethers:         db files
    rpc:            db files
    
    netgroup:       nis
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis-enterprise
    redis.io/cluster: gke-rec-target
  name: gke-rec-target-headless
spec:
  clusterIP: None
  ports:
  - name: api
    port: 9443
    protocol: TCP
    targetPort: 9443
  - name: sentinel
    port: 8001
    protocol: TCP
    targetPort: 8001
  selector:
    app: redis-enterprise
    redis.io/cluster: gke-rec-target
    redis.io/role: node
  type: ClusterIP

