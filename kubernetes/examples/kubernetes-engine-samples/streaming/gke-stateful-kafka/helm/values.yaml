# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

global:
  storageClass: premium-rwo-retain-zonal
  imageRegistry: "us-docker.pkg.dev/[PROJECT_ID]/main"
kafka:
  replicaCount: 3
  topologySpreadConstraints:
      - topologyKey: "topology.kubernetes.io/zone"
        whenUnsatisfiable: DoNotSchedule
        maxSkew: 1
  tolerations:
  - key: "app.stateful/component"
    operator: "Equal"
    value: "kafka-broker"
    effect: NoSchedule
  pdb:
    create: true
    maxUnavailable: 1
  resources:
    limits:
      cpu: 2
      ephemeral-storage: 1Gi
      memory: 8Gi
    requests:
      cpu: 2
      ephemeral-storage: 1Gi
      memory: 8Gi
  logsDirs: /bitnami/kafka/logs
  persistence:
    size: 1000Gi
  heapOpts: -Xmx4096m -Xms4096m
  metrics:
    kafka:
      enabled: true
      resources:
        requests:
          cpu: "500m"
          memory: "0.5Gi"
        limits:
          cpu: "500m"
          memory: "0.5Gi"
    jmx:
      enabled: true
      resources:
        requests:
          cpu: "500m"
          memory: "0.5Gi"
        limits:
          cpu: "500m"
          memory: "0.5Gi"
  zookeeper:
    replicaCount: 3
    nodeAffinityPreset:
      type: soft
      key: cloud.google.com/compute-class
      operator: In
      values:
        - Scale-Out
    podAntiAffinityPreset: "hard"
    topologySpreadConstraints:
      - topologyKey: "topology.kubernetes.io/zone"
        whenUnsatisfiable: DoNotSchedule
        maxSkew: 1
    tolerations:
    - key: "app.stateful/component"
      operator: "Equal"
      value: "zookeeper"
      effect: NoSchedule
    nodeSelector:
      app.stateful/component: "zookeeper"       
    pdb:
      create: true
      maxUnavailable: 1
    resources:
      limits:
        cpu: 1
        ephemeral-storage: 1Gi
        memory: 4Gi
      requests:
        cpu: 1
        ephemeral-storage: 1Gi
        memory: 4Gi
serviceAccount:
  create: true
  name: "ksa-kafka1"
  annotations:
    iam.gke.io/gcp-service-account: ""
gkeBackup:
  enabled: true
  protectedApplications:
  - name: kafka
    components:
      - name: kafka-cluster
        resourceKind: StatefulSet
        resourceNames: ["kafka"]
        strategy:
          type: BackupAllRestoreAll
          backupAllRestoreAll: {}
  - name: zookeeper
    components:
      - name: zookeeper
        resourceKind: StatefulSet
        resourceNames: ["kafka-zookeeper"]
        strategy:
          type: BackupAllRestoreAll
          backupAllRestoreAll: {}
storageClass:
  create: true
  name: premium-rwo-retain-zonal
  parameters:
    type: pd-ssd
