# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: replicator
spec:
  replicas: 1
  tls:
    autoGeneratedCerts: true
  image:
    application: confluentinc/cp-enterprise-replicator:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  podTemplate:
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 1000m
        memory: 1Gi
  dependencies:
    kafka:
      bootstrapEndpoint: my-target-cluster.kafka.svc.confluent-target.local:9094
      authentication:
        type: plain
        jaasConfig:
          secretRef: my-user-credentials
      tls:
        enabled: true
    interceptor:
      enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Connector
metadata:
  name: replicator
spec:
  name: replicator
  class: "io.confluent.connect.replicator.ReplicatorSourceConnector"
  taskMax: 4
  configs:
    topic.whitelist: "my-topic"
    confluent.license: ""
    confluent.topic.replication.factor: "3"
    dest.kafka.bootstrap.servers: "my-target-cluster.kafka.svc.confluent-target.local:9094"
    dest.kafka.security.protocol: "SASL_SSL"
    dest.kafka.ssl.truststore.location: "/mnt/sslcerts/truststore.jks"
    dest.kafka.truststore.password: "mystorepassword"
    dest.kafka.sasl.mechanism: "PLAIN"
    dest.kafka.sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"my-user\" password=\"REPLACEME\";"
    key.converter: "io.confluent.connect.replicator.util.ByteArrayConverter"
    src.consumer.group.id: "replicator"
    src.consumer.confluent.monitoring.interceptor.sasl.mechanism": "PLAIN"
    src.consumer.interceptor.classes": "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
    src.consumer.confluent.monitoring.interceptor.bootstrap.servers: "my-source-cluster.kafka.svc.confluent-source.local:9094"
    src.consumer.confluent.monitoring.interceptor.security.protocol: "SASL_SSL"
    src.consumer.confluent.monitoring.interceptor.ssl.truststore.location: "/mnt/sslcerts/truststore.jks"
    src.consumer.confluent.monitoring.interceptor.ssl.truststore.password: "mystorepassword"
    src.consumer.confluent.monitoring.interceptor.sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"my-user\" password=\"REPLACEME\";"
    src.kafka.sasl.mechanism: "PLAIN"
    src.kafka.sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"my-user\" password=\"REPLACEME\";"
    src.kafka.ssl.truststore.location: "/mnt/sslcerts/truststore.jks"
    src.kafka.truststore.password: "mystorepassword"
    src.kafka.bootstrap.servers: "my-source-cluster.kafka.svc.confluent-source.local:9094"
    src.kafka.security.protocol: "SASL_SSL"
    value.converter: "io.confluent.connect.replicator.util.ByteArrayConverter"
  connectRest:
    endpoint: https://replicator.kafka.svc.confluent-target.local:8083
    tls:
      secretRef: replicator-generated-jksk
